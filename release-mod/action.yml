name: Arma 3 release mod
description: Create and publish a new release of a mod ; allows multiple addons which must be previously built
inputs:

  name:
    description: short name of the mod, used as mod directory name and BI key authority
    required: true

  product:
    description: long description of the mod that goes in the mod.cpp and on the workshop
    required: true

  source:
    description: path to the pbo files, relative to repository root, recursive
    required: true

  workshopId:
    description: identifier of the Steam workshop item to update
    required: true

  url:
    description: URL to author website, used in mod.cpp
    required: false
    default: https://www.gsri.team

  author:
    description: name of the mod author, used in mod.cpp
    required: false
    default: www.gsri.team

  image:
    description: image used to illustrate the mod, used in mod.cpp
    required: true
    
  steam_login:
    description: login for steam account which will publish the mod
    required: true
  
  steam_password:
    description: password for steam account which will publish the mod
    required: true

runs:
  using: composite
  steps:

  - name: Get new version
    uses: arwynfr/actions-conventional-versioning/get-newVersion@0.3.3
    id: new-version

  - name: Build mod
    shell: pwsh
    id: build-mod
    run: |
      $ActionArgs = @{
        Source    = Join-Path -Path ${env:GITHUB_WORKSPACE} -ChildPath '${{ inputs.source }}'
        Target    = '${{ runner.temp }}'
        Name      = '${{ inputs.name }}'
        Product   = '${{ inputs.product }}'
        Version   = '${{ steps.new-version.outputs.next-version }}'
        Url       = '${{ inputs.url }}'
        Author    = '${{ inputs.author }}'
        Image     = Join-Path -Path ${env:GITHUB_WORKSPACE} -ChildPath '${{ inputs.image }}'
      }
      ${{ github.action_path }}/../functions/Build-Mod.ps1 @ActionArgs

  - name: Create Github release
    uses: arwynfr/actions-conventional-versioning@0.3.3
    with:
      pattern: $(Convert-Path ${{ runner.temp }}/*.zip)

  - name: Publish on Workshop
    shell: pwsh
    run: |
      $ActionArgs = @{
        ItemId  = ${{ inputs.workshopId }}
        Content = '${{ runner.temp }}/${{ inputs.name }}'
        Title   = '${{ inputs.product }}'
      }
      ${{ github.action_path }}/../functions/Publish-Mod.ps1 @ActionArgs
    env:
      STEAM_LOGIN: '${{ inputs.steam_login }}'
      STEAM_PASSWD: '${{ inputs.steam_password }}'

